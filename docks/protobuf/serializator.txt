# JMH version: 1.26
# VM version: JDK 1.8.0_251, Java HotSpot(TM) 64-Bit Server VM, 25.251-b08
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56964:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 6 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.serialization.JsonSerializator.setSerializationThroughput

# Run progress: 0,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 691799,388 ops/s
# Warmup Iteration   2: 864530,976 ops/s
# Warmup Iteration   3: 866015,599 ops/s
# Warmup Iteration   4: 860986,724 ops/s
# Warmup Iteration   5: 866966,269 ops/s
Iteration   1: 866377,755 ops/s
Iteration   2: 866102,437 ops/s
Iteration   3: 865096,421 ops/s
Iteration   4: 865606,467 ops/s
Iteration   5: 864451,176 ops/s


Result "json.serialization.JsonSerializator.setSerializationThroughput":
  865526,851 ±(99.9%) 2985,193 ops/s [Average]
  (min, avg, max) = (864451,176, 865526,851, 866377,755), stdev = 775,245
  CI (99.9%): [862541,658, 868512,044] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_251, Java HotSpot(TM) 64-Bit Server VM, 25.251-b08
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56964:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 6 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: json.serialization.JsonSerializator.setSerializationTime

# Run progress: 50,00% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁵ s/op
# Warmup Iteration   2: ≈ 10⁻⁵ s/op
# Warmup Iteration   3: ≈ 10⁻⁵ s/op
# Warmup Iteration   4: ≈ 10⁻⁵ s/op
# Warmup Iteration   5: ≈ 10⁻⁵ s/op
Iteration   1: ≈ 10⁻⁵ s/op
Iteration   2: ≈ 10⁻⁵ s/op
Iteration   3: ≈ 10⁻⁵ s/op
Iteration   4: ≈ 10⁻⁵ s/op
Iteration   5: ≈ 10⁻⁵ s/op


Result "json.serialization.JsonSerializator.setSerializationTime":
  ≈ 10⁻⁵ s/op


# Run complete. Total time: 00:03:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt       Score      Error  Units
JsonSerializator.setSerializationThroughput  thrpt    5  865526,851 ± 2985,193  ops/s
JsonSerializator.setSerializationTime         avgt    5      ≈ 10⁻⁵              s/op

Process finished with exit code 0